{"version":3,"sources":["containers/login.js","containers/signup.js","containers/access_reports.js","components/access_report.js","containers/access_report_edit.js","containers/access_report_create.js","containers/employees.js","components/employee.js","containers/employee_edit.js","containers/admin_dashboard.js","components/access_reports_employee.js","containers/employee_dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","handleForm","e","setState","target","name","value","handleSubmit","preventDefault","props","login","this","className","onSubmit","bind","htmlFor","onChange","type","React","Component","Signup","password_confirmation","signup","AccessReports","error","access_reports","onGetAccessReports","fetch","api_url","method","headers","auth_token","then","res","ok","json","catch","err","console","log","deleteAccessRep","id","prevState","filter","aR","toAccessReport","accRep","setAccessRep","history","push","style","width","map","idx","key","entry","exit","employee","onClick","class","to","AccessReportEdit","Date","handleChange","editAccessRep","access_report","defaultValue","AccessReportCreate","employee_id","addAccessReport","Employees","employees","onGetEmployees","toEmployee","setEmployee","EmployeeEdit","editEmployee","user","AdminDashboard","access_reports_view","employees_view","employee_view","body","JSON","stringify","exact","path","render","withRouter","length","EmployeeDashboard","App","toLogin","toSignup","toAminDash","toEmployeeDash","admin","handleLogin","form","data","text","errorMessage","parse","message","handleSignup","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c005c2f8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Login extends React.Component {\n  state =  {\n    username: '',\n    password: '',\n  }\n\n  handleForm = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.login({username: this.state.username, password: this.state.password})\n  }\n\n  render() {\n\n    const { username, password } = this.state\n\n    return (\n      <div className=\"Login block-padding\">\n        <h2 className=\"Login-Title secondary-title\">Login</h2>\n        <form className=\"Login-Form block-padding\" onSubmit={this.handleSubmit.bind(this)}>\n          <label htmlFor=\"username\">Username</label>\n          <input value={ username } name=\"username\" onChange={this.handleForm}></input>\n          <label htmlFor=\"password\">Password</label>\n          <input value={ password } name=\"password\" onChange={this.handleForm}></input>\n          <button className=\"btn\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Signup extends React.Component {\n  state =  {\n    name: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n  }\n\n  handleForm = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signup({\n      name: this.state.name,\n      username: this.state.username, \n      password: this.state.password,\n      password_confirmation: this.state.password_confirmation\n    })\n  }\n\n  render() {\n\n    const { name, username, password, password_confirmation } = this.state\n\n    return (\n      <div className=\"Signup block-padding\">\n        <h2 className=\"Signup-Title secondary-title\">Signup</h2>\n        <form className=\"Signup-Form block-padding\" onSubmit={this.handleSubmit.bind(this)}>\n          <label htmlFor=\"username\">Name</label>\n          <input value={ name } name=\"name\" onChange={this.handleForm}></input>\n          <label htmlFor=\"username\">Username</label>\n          <input value={ username } name=\"username\" onChange={this.handleForm}></input>\n          <label htmlFor=\"password\">Password</label>\n          <input value={ password } name=\"password\" onChange={this.handleForm}></input>\n          <label htmlFor=\"password_confirmation\">Password Confirmation</label>\n          <input value={ password_confirmation } name=\"password_confirmation\" onChange={this.handleForm}></input>\n          <button className=\"btn\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class AccessReports extends React.Component {\n  state =  {\n    error: null,\n    access_reports: [],\n  }\n\n  componentDidMount() {\n    this.onGetAccessReports();\n  }\n\n  onGetAccessReports = () => {\n    fetch(`${this.props.api_url}/access_reports`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => this.setState({\n      access_reports: res,\n      error: null,\n    }))\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  deleteAccessRep = (id) => {\n    console.log(\"deleting\")\n    fetch(`${this.props.api_url}/access_reports/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => {\n      console.log(res)\n      this.setState((prevState, props) => ({\n        access_reports: prevState.access_reports.filter(aR => aR.id !== id)\n      }));\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  toAccessReport = (accRep) => {\n    this.props.setAccessRep(accRep)\n    this.props.history.push('/access_reports/'+accRep.id)\n  }\n\n  render() {\n\n    \n    return (\n      <div className=\"AccessReports\">\n        <h2>Access Reports</h2>\n          <table style={{width: '100%'}}>\n            <tr>\n              <th>ENTRY</th>\n              <th>EXIT</th>\n              <th>EMPLOYEE</th>\n              <th></th>\n              <th></th>\n            </tr>\n            <tbody>\n              {\n                this.state.access_reports.map((accRep, idx) => (\n                  <tr key={idx}>\n                    <td>{accRep.entry}</td>\n                    <td>{accRep.exit}</td>\n                    <td>{accRep.employee.name}</td>\n                    <td className=\"AccessReports-view\" onClick={() => this.toAccessReport(accRep)}>\n                      View\n                    </td>\n                    <td className=\"AccessReports-delete\" onClick={() => this.deleteAccessRep(accRep.id)}>\n                      Delete\n                    </td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        <span className=\"Error-Message\">{this.state.error}</span>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default (props) => {\n\n  return (\n    <div class=\"AccessReport\">\n      <h2>User Access Report</h2>\n      <table style={{width: '100%'}}>\n        <tr>\n          <th>Entry</th>\n          <th>Exit</th>\n          <th>Employee</th>\n          <th></th>\n        </tr>\n        <tr>\n          <td>{props.accRep.entry}</td>\n          <td>{props.accRep.exit}</td>\n          <td>{props.accRep.employee.name}</td>\n          <td>\n            <Link className=\"AccessReport-edit\" to={`/access_reports/${props.accRep.id}/edit`}>Edit</Link>\n          </td>\n        </tr>\n      </table>    \n    </div>\n  )\n}\n\n","import React from 'react';\n\nexport default class AccessReportEdit extends React.Component {\n\n  state = {\n    entry: Date(`${this.props.accRep.entry}`),\n    exit: Date(`${this.props.accRep.exit}`),\n    employee: this.props.accRep.employee.name,\n  }\n\n  componentDidMount() {\n    console.log(this.props.accRep)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state)\n    this.props.editAccessRep(this.props.accRep.id, {\n      access_report: {\n        entry: this.state.entry,\n        exit: this.state.exit\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Edit Access Report from Employee {this.state.employee}</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>Entry</label>\n          <input type=\"datetime-local\" name=\"entry\" defaultValue={Date(`${this.props.accRep.entry}`)} value={this.state.entry} onChange={this.handleChange.bind(this)}/>\n          <label>Exit</label>\n          <input type=\"datetime-local\" name=\"exit\" value={this.state.exit} onChange={this.handleChange.bind(this)}/>\n          <button>Update</button>\n        </form>   \n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class AccessReportCreate extends React.Component {\n\n  state = {\n    employee_id: this.props.employee.id,\n    entry: '',\n    exit: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    console.log(this.state)\n    e.preventDefault();\n    this.props.addAccessReport({\n      access_report: {\n        ...this.state\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Edit Employee {this.state.name} info</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>Entry</label>\n          <input type=\"datetime-local\" name=\"entry\" value={this.state.entry} onChange={this.handleChange.bind(this)}/>\n          <label>Exit</label>\n          <input type=\"datetime-local\" name=\"exit\" value={this.state.exit} onChange={this.handleChange.bind(this)}/>\n          <button>Create</button>\n        </form>   \n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class Employees extends React.Component {\n  state =  {\n    error: null,\n    employees: [],\n  }\n\n  componentDidMount() {\n    this.onGetEmployees();\n  }\n\n  onGetEmployees = () => {\n    fetch(`${this.props.api_url}/employees`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => this.setState({\n      employees: res,\n      error: null,\n    }))\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  \n\n  toEmployee = (employee) => {\n    console.log(employee)\n    this.props.setEmployee(employee)\n    this.props.history.push('/employees/'+employee.id)\n  }\n\n\n  render() {\n\n\n    return (\n      <div className=\"Employees\">\n        <h2>Employees</h2>\n          <table style={{width: '100%'}}>\n            <tr>\n              <th>Name</th>\n              <th>Username</th>\n              <th></th>\n              <th></th>\n            </tr>\n            <tbody>\n              {\n                this.state.employees.map((employee, idx) => (\n                  <tr key={idx}>\n                    <td>{employee.name}</td>\n                    <td>{employee.username}</td>\n                    <td className=\"AccessReports-view\" onClick={() => this.toEmployee(employee)}>\n                      View  \n                    </td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        <span className=\"Error-Message\">{this.state.error}</span>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default (props) => {\n  return (\n    <div class=\"Employee\">\n      <h2>Employee</h2>\n      <table style={{width: '100%'}}>\n        <tr>\n          <th>Name</th>\n          <th>Username</th>\n          <th></th>\n        </tr>\n        <tr>\n          <td>{props.employee.name}</td>\n          <td>{props.employee.username}</td>\n          <td>\n            <Link className=\"Employee-edit\" to={`/employees/${props.employee.id}/edit`}>Edit</Link>\n          </td>\n          <td>\n            <Link className=\"link\" to={`/employees/${props.employee.id}/addAccessReport`}>+Add Access Report</Link>\n          </td>\n        </tr>\n      </table>    \n    </div>\n  )\n}\n","import React from 'react';\n\nexport default class EmployeeEdit extends React.Component {\n\n  state = {\n    name: this.props.employee.name,\n    username: this.props.employee.username,\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.editEmployee(this.props.employee.id, {\n      user: {\n        username: this.state.username,\n        name: this.state.name\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Edit Employee {this.state.name} info</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>Name</label>\n          <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange.bind(this)}/>\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange.bind(this)}/>\n          <button>Update</button>\n        </form>   \n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Route, withRouter, Link } from 'react-router-dom';\nimport AccessReports  from './access_reports';\nimport AccessReport from '../components/access_report';\nimport AccessReportEdit from '../containers/access_report_edit';\nimport AccessReportCreate from '../containers/access_report_create';\nimport Employees from './employees';\nimport Employee from '../components/employee';\nimport EmployeeEdit from '../containers/employee_edit';\n\nclass AdminDashboard extends React.Component {\n  state =  {\n    error: null,\n    access_reports: [],\n    employees: null,\n    accRep: {},\n    employee: {}\n  }\n\n  onGetEmployees = () => {\n    fetch(`${this.props.api_url}/employees`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => this.setState({\n      employees: res,\n      access_reports_view: false,\n      employees_view: true,\n      employee_view: false,\n      error: null,\n    }))\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  setAccessRep = (accRep) => {\n    this.setState({\n      accRep: {...accRep}\n    })\n  }\n\n  setEmployee = (employee) => {\n    console.log(employee, \"from set employee\")\n    this.setState({\n      employee: {...employee}\n    })\n  \n  }\n\n  editAccessRep = (id, accRep) => {\n    fetch(`${this.props.api_url}/access_reports/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(accRep),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => {this.props.history.push(`/`)})\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  editEmployee = (id, employee) => {\n    fetch(`${this.props.api_url}/employees/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(employee),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => {this.props.history.push(`/employees`)})\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  addAccessReport = (accRep) => {\n    fetch(`${this.props.api_url}/access_reports/`, {\n      method: 'POST',\n      body: JSON.stringify(accRep),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => {this.props.history.push(`/`)})\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"AdminDashboard\">\n        <h2>Admin Dashboard</h2>\n        <nav>\n          <ul>\n            <li><Link to={'/'}>Access Reports</Link></li>\n            <li><Link to={'/employees'}>Employees</Link></li>\n          </ul>\n        </nav>\n        <Route \n          exact path={'/'} \n          render={(props) => (\n            <AccessReports \n              {...props} \n              api_url={this.props.api_url} \n              auth_token={this.props.auth_token}\n              setAccessRep={this.setAccessRep}\n          />)}\n        />\n        <Route \n          exact path={'/access_reports/:id'} \n          render={(props) => (\n            <AccessReport \n              {...props} \n              accRep={this.state.accRep}\n            />\n          )}\n        />\n        <Route \n          exact path={'/access_reports/:id/edit'} \n          render={(props) => (\n            <AccessReportEdit \n              {...props} \n              accRep={this.state.accRep} \n              editAccessRep={this.editAccessRep}\n            />\n          )}\n        />\n        <Route \n          exact path={'/employees'} \n          render={(props) => (\n            <Employees \n              {...props}\n              api_url={this.props.api_url} \n              auth_token={this.props.auth_token}\n              setEmployee={this.setEmployee}\n            />\n          )}\n        />\n        <Route \n          exact path={'/employees/:id'} \n          render={(props) => (\n            <Employee \n              {...props}\n              employee={this.state.employee} \n            />\n          )}\n        />\n        <Route \n          exact path={'/employees/:id/edit'} \n          render={(props) => (\n            <EmployeeEdit \n              {...props}\n              employee={this.state.employee}\n              editEmployee={this.editEmployee}\n            />\n          )}\n        />\n        <Route \n          exact path={'/employees/:id/addAccessReport'} \n          render={(props) => (\n            <AccessReportCreate \n              {...props}\n              employee={this.state.employee}\n              addAccessReport={this.addAccessReport}\n            />\n          )}\n        />\n\n        <span className=\"Error-Message\">{this.state.error}</span>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AdminDashboard)","import React from 'react';\n\nexport default (props) => {\n  console.log(props)\n  return (\n    <div className=\"AccessReports\">\n      <h2>My Access Reports</h2>\n      {\n        props.access_reports.length > 0\n        ? <table style={{width: '100%'}}>\n            <tr>\n              <th>Entry</th>\n              <th>Exit</th>\n              <th></th>\n            </tr>  \n            { \n              props.access_reports.map((accRep, idx) => (\n                  <tr key={idx}>\n                    <td>{accRep.entry}</td>\n                    <td>{accRep.exit}</td>\n                  </tr>\n                ))\n              }\n          </table>\n        : <div>You don't have Access Reports. Only and administrator can add Access Reports</div>         \n      }    \n    </div>\n  )\n}\n\n","import React from 'react';\nimport { Route, withRouter, Link } from 'react-router-dom';\n\nimport AccessReportsEmployee from '../components/access_reports_employee';\n\nclass EmployeeDashboard extends React.Component {\n\n  state = {\n    access_reports: [],\n    name: '',\n    username: ''\n  }\n\n  componentDidMount() {\n    this.onGetAccessReports();\n  }\n\n\n  onGetAccessReports = () => {\n    fetch(`${this.props.api_url}/access_reports`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.props.auth_token\n      }\n    })\n    .then(res => {\n      if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(res => this.setState({\n      access_reports: res,\n    }))\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"EmployeeDashboard\">\n        <h2>Employee Dashboard</h2>\n        <nav>\n          <ul>\n            <li><Link to={'/'}>My Access Reports</Link></li>\n          </ul>\n        </nav>\n        <Route \n          exact path={'/'} \n          render={(props) => (\n            <AccessReportsEmployee \n              {...props} \n              access_reports={this.state.access_reports}\n          />)}\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(EmployeeDashboard);","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport Login from './containers/login';\nimport Signup from './containers/signup';\nimport AdminDashboard from './containers/admin_dashboard';\nimport EmployeeDashboard from './containers/employee_dashboard';\n\nclass App extends React.Component {\n\n  state = {\n    login: {\n      username: null,\n      password: null,\n    },\n    employees: [],\n    auth_token: null,\n    error: null,\n    toLogin: true,\n    toSignup: false,\n    toAminDash: false,\n    toEmployeeDash: false,\n    admin: false,\n    api_url: 'https://evening-tundra-23085.herokuapp.com',\n    name: '',\n  }\n\n  componentDidMount() {\n    if(this.auth_token === null) {\n      this.props.history.push('/')\n    }\n  }\n\n  handleSubmit(e) {\n\n    e.preventDefault();\n    const data = {\n      username: 'User Admin',\n      password: '123456'\n    }\n\n    fetch(`${this.state.api_url}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) { throw res }\n        return res.json()\n      })\n      .then(res => this.setState({\n        auth_token: res.auth_token\n      }))\n      .catch(err => {\n        err.text().then( errorMessage => {\n          this.setState({error: JSON.parse(errorMessage).message})\n        })\n      })\n  }\n\n  handleSignup(form) {\n    const data = {\n      name: form.name,\n      username: form.username,\n      password: form.password,\n      password_confirmation: form.password_confirmation,\n    }\n\n    fetch(`${this.state.api_url}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({user: data})\n    })\n      .then(res => {\n        if (!res.ok) { throw res }\n        return res.json()\n      })\n      .then(res => this.setState({\n        auth_token: res.auth_token,\n        admin: res.admin\n      }))\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  handleLogin = (form) => {\n    const data = {\n      username: form.username,\n      password: form.password\n    }\n\n    fetch(`${this.state.api_url}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) { throw res }\n        return res.json()\n      })\n      .then(res => this.setState({\n        auth_token: res.auth_token,\n        admin: res.admin\n      }))\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <h1 className=\"primary-title\">Employee Checker Client</h1>\n          <div className=\"ApiUrl\">\n            <label htmlFor=\"api_url\">API URL:</label>\n            <input value={this.state.api_url} name=\"api_url\" onChange={(e) => {\n              this.setState({\n                api_url: e.target.value\n              })\n            }}></input>\n          </div>\n\n          {\n            this.state.auth_token\n            ? this.state.admin\n              ? <AdminDashboard auth_token={this.state.auth_token} api_url={this.state.api_url} />\n              : <EmployeeDashboard auth_token={this.state.auth_token} api_url={this.state.api_url}/>\n            : this.state.toLogin \n              ? <div>\n                  <Login login={this.handleLogin.bind(this)}/>\n                  <span onClick={() => {\n                    this.setState({\n                      toSignup: true,\n                      toLogin: false\n                    })\n                  }}>Signup instead</span>\n                </div>\n              : <div> \n                  <Signup signup={this.handleSignup.bind(this)}></Signup>\n                  <span onClick={() => {\n                    this.setState({\n                      toLogin: true,\n                      toSignup: false,\n                    })\n                  }}>Login instead</span>\n                </div>\n          }\n          <span className=\"Error-Message\">{this.state.error}</span>\n        </div>\n      </BrowserRouter>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}